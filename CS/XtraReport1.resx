<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="xrPictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhVABUAIcAAAAAAMvb5fvIaaOjpPrKVCA3YXJCFy9Qjf/sYv39/tR1JLuKXo6mueuwd3JycvnQ
        kYGBgp65ynLB/mu+/f7cWfL5/1FskGKAn7y9vZiYmHenz4pmR/+0QsDj/u6NL+6QMLnBx7hqJbzi/sTl
        /rng/otSIsfm/uyKLrXe/v/DSv/mXoZMGMro/rHd/s7q/q3b/mVlZdHr/6ra/v2kOtXs/9mBM6bY/mK6
        /ezs7P6pPdju/6LW/v65RJ/V/tvv/9LR0dPFt97x//7SU5vT/tKvkOHy/5fR/kBlp+Tz/5TQ/pDO/tWl
        e1a1/ef0/4zN/omapYjL/ur2/yArQO+9ioXJ/t23SIHI/vP18H3G/vXx4keu/ez3/2hHKlGz/XBkUGY6
        E+/KqfnnrnrF/m09E8h2KnfD/vKONe/4/93e3uLi4tqGLJlrLfCRMntEEzlLZYJ4aWa8/Wxra1NWW1q3
        /Vw1E0yx/Xi47PXo0f29SOOBK//hW/7JTltMLtVzHe7x8nW+9uGFNf+wOuqEKvbzx6VmKbSJNve8W124
        /WeVwZRVHPaZNem2Sf/YVqFdIv+vQLC1uPuSNfuWPPGTM/icN8OXb/b49/eMLv/iXPKVM/S8S8vX3nhL
        H6J9WPzlfemdW9V9MfS3S6FZG+Pm6t2NO/atQHhZPV+c4rqsnzIjFGWs5dzg4//oX+R+JMrKyWU7F1NJ
        QPSWNPOyROuDJX1TLeqMOdPV18Li+mVqc6TI4/GQO2NdWA0JBM/Q0OWINm6u4pvP9+z1+3nC/AIDAxIL
        BuqIMvufOP+tNWhSPdfZ2f/ARWdoaQQKDGtAG+zy94+YnhwaF6GWi2W3+m269mBiZcfg9IPG+u7LUYmK
        ii0gEuh+H9+cO19QQwABB+6kPufr7g8cNeiILpDM+gwFANrGjL7g+vKnPMm+sM14Lv/fWWBgYOKxWW9P
        MxAgP6ius+LTxr62rorJ+bqvpnQ/D//kXPXBTrxuKmW5+ma6/M+FL+miQ2M1DYbJ+yImLXrC+UZJTgAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAD/ACwAAAAAVABUAAAI/wD/CRxIsKDBgwgNAkjIsKHDhxAf
        ApgYsaLFixAnaqGIsaNHixq1bFz4saRJhQBEquR4sqXHkCpFsnRJMyOAOjhz5pxZs+fBiTqD4uTps+jE
        LkiTKk1KtCjNo0ujMiXptOZEJlizat2KtWnVlwC4iuXq9StIAHPSqlUbzZSpQ2vXljUrEcChu3jxIjpy
        gN2RVHnzzqWbcOKNQzcOJz5kz8IrToXW8OHnC7FixYMJFzScuHPnexfUCUlGgNEbX55TZ9b8byKc17Bj
        vx5nCBQoARFk615Nd+IEOBN+Bwf+W5qvDNduyfHyxJfw58Th8K7qO7j16xP+2EF0gG+Bb240aP/ATn66
        z4kS0qtfn97O9u4HCrBz4wvRH/b4zT8FgL9/GQ0XHGCBBW5IUcAFdvSXH1WaTVTGgxBGGKEdF7SDhig/
        xAOBHK9c0I+EID6oX0kTiWHiiSiiiIUGjyTgoigYZOBAHLf0k+KNJ47Y0URY9Ojjj0BiUU0ALlaCRowO
        wMCAGEE22aOOZ1kh5ZRUVinlPqpUkoCRSCpp5ZdUQmkTFWSWaeaZZcKjSpFHZhCHMgxUg+acZorZ0ERQ
        5KnnnnzuGc6aW6rS5RN9FtqnnQhN5MSijDbqqKO/pHEHGFMswckrr+hC6KOcPoroZgAoIeqopJZqKi6e
        RBKJGYAkAoA4rrz/EY6ptNL6qUATJaHrrrz26msSILACSSS5ANKIMLu0Mcsvvzbr66cTGSHttNRWa60R
        STwiyLDFEiLMMCvMgsu15F5r50RDpKvuuuy2qy4G2XALCCHDDJPIJhG4q6++UE7Uw78AByzwwAGbIyyx
        NdRTgittbIILwRBHPOJEO1Rs8cUYZ4wxEcJCcsInIYTSxhfMRKDxySjvYN5ENrTs8sswxxwzJWY0MMUU
        RFDCSSlcuNKOzEAH3TJvE8lg9NFIJ6300ubcoaUfyIAwAATK6PLI0lhnfXRmE73g9ddghy322DIE4Ecl
        leCATIwQxAFDBGPHLTfYc03Uwt1456333nzf/60JDmirjcHUbjOAQt+IJ96CVxOh4PjjkEcu+eSPa3J2
        2rUM3jYM7VDu+eePEzURCaSXbvrpqKduuiZaJoBD5oTD8IQIqtdue+kzTSTC7rz37vvvwPdODjI/DJCB
        KGsTrowzwTfvvO8cTdTB9NRXb/312FtPjioOAPCMO0CcAs3mzpCT/fnoWx89ACO07/778Mcv//vUEHHM
        MtiMknAjKzDDxRu2mJ8AB/i+3AHABAhMoAIXyMAGJrAVCvjCMlABiP2tYAxfmAU1HMjBDiZQdABggQhH
        SMISmvCELHABEPpAB25goxcWxCAXNIHCGtpQhIwDgAt2yMMe+vCHQFRhH/9WwIVG0OIT9eDfGFzBDE0E
        8YlQdEHdABCDKlrxiljMohaJoIATqKoXSFQiE1uhxTKa0YpcAwAN1sjGNrrxjW9cAiuIYYZcgDGJF2Ri
        PODIxz6ukWgA0IEgB0nIQhqykETogywscYI8KCBkF/yCPt5xyEpaUgcrA4APNsnJTnryk51cAiA80YBS
        LkFnG1hHz06hA1C60pUTA0AQZknLWtrylrP0ARDcgQM/NEMUtZDaNZKUjgHg8pjH7BcAisDMZjrzmdBk
        pibS0EscpIEXgxsmDKbxCCRE85vQPBcAkEDOcprznOhEQi2o6Qdr/iCbxGxHOueJTmgBoAn4zKc+98n/
        z3VW85rw3GYG+ElQgt6qNQCIgkIXytCGMrQJP6AmDnCABmwOQJvpyIBDN9rQQRwUVwDYgkhHStKSjhQY
        /sSBNyoa0HRcAxgmjekWgDGITnCDQS2ZyBl2ytOe+nSnKBVFM5rhDVVgsx3DVMY0HDCFMFzhpzzdQiVq
        Oo+PgqoCWM2qVrdagWYAgVJTaMApF8CJDZTiGNvwQj6MYYgHXIGrU+3EPKqKU6sAIAt4vQLauFqBK9yh
        AWRghSDAkQdWPDIUK5DHF+jADG0EwhHG4MADnFaBuKIDHRSwaqIAkAICGMIQAgjtAwTwgNI2IAdq6EMe
        iEEMGJ4jBPwzwGK/oIZA/wTCGIHgQDI6EYZOYJYRjNBsYTibgmTgAQ884AAHHEGKcpQDtQpYbWtr8NpG
        lECxdKADGTjAgxQIAR160MNlKUCB4NaVOgDYwx5SwN4UHJcHsYgFKdQQXdZWkAywXcEXvrCJNVQBvCoI
        sArmMV7zsgakemCEENTrXjzYZhH4qC8xKlgP2BKiEP9dxSoEHOB5XAKzmT1vbwCAAASsQg8UEAIB6JEJ
        CEdXEIDoxSi0sQhr6KHEA+ZwgC+B4hAfGFQc/nB5CaCNT4CjG5kgAAVUsOG5zoPDG1YBjzEr3ItMhLzk
        BS5wVbwHRlAAvJfQMZM13OQPG/jHPwGAENbMZvUymOq96l0zOphcYg3vOMVVBoub28tePBiXB4BWLgfw
        4F1GXELDlxBCCvL8kYkkw7jIDbRyHUFpSucgBzPIdA44kAk8OILRJAKAoCvtiEtfOtOZLkYxJjEJRWAC
        FooAtUkmYmpMp1rVrFaErmEBC0y8GhayPslEZoDrXPO6176WRLIlIYlg5xQAiuA1JphN7WpX29kumQgb
        tv2Bbm/72+DG9n7Y4AE2dPsD3D73B8RtVw+42wPnhvcHPMDunkzk3fh2d73PA4AT+PsEHgD4vo3S73+f
        YOBOmYi/wYFw9DJcxGi2K8QjbhWKW7wqAQEAOw==
</value>
  </data>
</root>